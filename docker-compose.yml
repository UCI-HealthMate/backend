version: '3.3'

services:
  django:
    build:
      context: ./backend
    container_name: django
    command: >
        bash -c "python manage.py migrate && gunicorn healthmate.wsgi --bind 0.0.0.0:8000"
    volumes:
      - ./backend:/backend/
    ports:
      - "8000:8000"
    depends_on:
      - sqldb
    restart: always
    # env_file:
    #   - .env

  sqldb:
    image: postgres:latest
    container_name: sqldb
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=team62
      - POSTGRES_PASSWORD=team62
      - POSTGRES_DB=healthmate
    volumes:
      - db_data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4:latest
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=team62@gmail.com
      - PGADMIN_DEFAULT_PASSWORD=secret
      - PGADMIN_LISTEN_PORT=81
    ports:
     - 8001:81
    volumes:
     - pgadmin_data:/var/lib/pgadmin
    depends_on:
     - sqldb
  
  # prometheus:
  #   image: prom/prometheus
  #   container_name: prometheus
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./prometheus:/etc/prometheus
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #     - '--storage.tsdb.path=/prometheus'
  #     - '--web.console.libraries=/etc/prometheus/console_libraries'
  #     - '--web.console.templates=/etc/prometheus/consoles'
  #   depends_on:
  #     - sqldb
  #   restart: always

  redisdata:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"

  messagebroker:
    image: rabbitmq:3.7-management
    container_name: 'rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672
    expose:
      - 5672
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    # depends_on:
    #   - backend
    tty: true

  flower:
    image: mher/flower
    container_name: flower
    ports:
      - "5555:5555"
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@messagebroker
      - FLOWER_PORT=5555
      - FLOWER_BASIC_AUTH=guest:guest
    depends_on:
      - messagebroker
  
  celery-worker:
    build:
      context: ./backend
    volumes:
      - ./backend:/backend
    container_name: celery-worker
    command: celery -A healthmate worker --loglevel=info --concurrency=4
    depends_on:
      - messagebroker
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@messagebroker
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DJANGO_SETTINGS_MODULE=healthmate.settings

  celery-beat:
    build:
      context: ./backend
    volumes:
      - ./backend:/backend
    container_name: celery-beat
    command: celery -A healthmate beat --loglevel=info
    depends_on:
      - celery-worker
      - messagebroker
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@messagebroker
      - DJANGO_SETTINGS_MODULE=healthmate.settings
  
  selenium:
    image: seleniarm/standalone-chromium:latest
    ports:
      - "4444:4444"
      - "5900:5900"
      - "7900:7900"
    shm_size: 2g

volumes:
  db_data:
  pgadmin_data:

  